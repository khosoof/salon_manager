name: Android Debug APK

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-debug:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
      - uses: actions/checkout@v4

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      - name: Flutter doctor (diagnostics)
        run: flutter doctor -v

      # ساخت با لاگ Verbose و ذخیره در build.log
      - name: Build debug APK (dev flavor)
        run: |
          set -e
          flutter pub get
          flutter build apk --debug -v --dart-define=FLAVOR=dev | tee build.log

      # استخراج مسیر APK از لاگ؛ اگر خالی بود، با find جست‌وجو می‌کنیم
      - name: Detect APK path
        id: detect
        shell: bash
        run: |
          set -e
          APK_FROM_LOG=$(sed -nE 's/.*Built (.*\.apk).*/\1/p' build.log | tail -n1)
          if [ -n "$APK_FROM_LOG" ] && [ -f "$APK_FROM_LOG" ]; then
            echo "apk_path=$APK_FROM_LOG" >> "$GITHUB_OUTPUT"
            echo "Found via log: $APK_FROM_LOG"
            exit 0
          fi
          echo "Log didn’t reveal a file. Fallback to find…"
          APK_FROM_FIND=$(find build -type f -name "*.apk" | head -n1 || true)
          if [ -n "$APK_FROM_FIND" ] && [ -f "$APK_FROM_FIND" ]; then
            echo "apk_path=$APK_FROM_FIND" >> "$GITHUB_OUTPUT"
            echo "Found via find: $APK_FROM_FIND"
            exit 0
          fi
          echo "❌ No APK found."
          exit 2

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: ${{ steps.detect.outputs.apk_path }}
          if-no-files-found: error
          retention-days: 7

      # برای شفافیت، کل ساختار خروجی‌ها را هم لیست می‌کنیم
      - name: Show outputs tree
        if: always()
        run: |
          echo "== outputs under build =="
          find build -maxdepth 4 -type d -print
          echo "== apks =="
          find build -type f -name "*.apk" -print || true